from pwn import *
import sys
import base64
import re

import hashlib
import hmac

def xor(a, b):
    c = bytearray()
    for i in range(len(b)):
        c.append(a[i] ^ b[i])
    return bytes(c)

r = remote(sys.argv[1], sys.argv[2])

harmless = open("code/harmless.py", "rb").read()
exploit = open("code/exploit.py", "rb").read()

assert hashlib.md5(harmless).digest() == hashlib.md5(exploit).digest(), "MD5 hashes dont match"

print(r.recvuntil(b"Choice >"))
r.sendline(b"1")
print(r.recvuntil(b"Program>"))
r.sendline(base64.b64encode(harmless))
print(b"Harmless program send")
print(r.recvline())
signed = r.recvline()
signature, data = signed.split(b":", 1)
print(b"Signed prog:", signed)

r.recvuntil(b"Choice >")
r.sendline(b"2")
r.recvuntil(b"Signed Program>")
payload = signature + b":" + base64.b64encode(exploit)
print(b"Payload:", payload)
r.sendline(payload)
k = r.recvall(timeout=2)
r.close()

a = re.findall(r"CSR{.*}", k.decode())
if a:  # Got flag
    print(a[0])
    sys.exit(0)

print("Didn't recveive flag...")
sys.exit(1)
